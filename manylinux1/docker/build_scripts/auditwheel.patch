diff --git a/repair.py b/repair.py
index e342b0f..bae47ae 100644
--- a/repair.py
+++ b/repair.py
@@ -9,6 +9,8 @@ from subprocess import check_call, check_output, CalledProcessError
 from distutils.spawn import find_executable
 from typing import Optional
 
+from wheel.install import WHEEL_INFO_RE  # type: ignore
+
 from .policy import get_replace_platforms
 from .wheeltools import InWheelCtx, add_platforms
 from .wheel_abi import get_wheel_elfdata
@@ -50,24 +52,14 @@ def repair_wheel(wheel_path: str, abi: str, lib_sdir: str, out_dir: str,
     with InWheelCtx(wheel_path) as ctx:
         ctx.out_wheel = pjoin(out_dir, wheel_fname)
 
+        dest_dir = WHEEL_INFO_RE(wheel_fname).group('name') + lib_sdir
+
+        if not exists(dest_dir):
+            os.mkdir(dest_dir)
+
         # here, fn is a path to a python extension library in
         # the wheel, and v['libs'] contains its required libs
         for fn, v in external_refs_by_fn.items():
-            # pkg_root should resolve to like numpy/ or scipy/
-            # note that it's possible for the wheel to contain
-            # more than one pkg, which is why we detect the pkg root
-            # for each fn.
-            pkg_root = fn.split(os.sep)[0]
-
-            if pkg_root == fn:
-                # this file is an extension that's not contained in a
-                # directory -- just supposed to be directly in site-packages
-                dest_dir = lib_sdir + pkg_root.split('.')[0]
-            else:
-                dest_dir = pjoin(pkg_root, lib_sdir)
-
-            if not exists(dest_dir):
-                os.mkdir(dest_dir)
 
             ext_libs = v[abi]['libs']  # type: Dict[str, str]
             for soname, src_path in ext_libs.items():
@@ -130,12 +122,7 @@ def copylib(src_path, dest_dir):
 
     verify_patchelf()
     check_call(['patchelf', '--set-soname', new_soname, dest_path])
-
-    for rp in itertools.chain(rpaths['rpaths'], rpaths['runpaths']):
-        if is_subdir(rp, os.path.dirname(src_path)):
-            patchelf_set_rpath(dest_path, pjoin(
-                dirname(dest_path), relpath(rp, dirname(src_path))))
-            break
+    check_call(['patchelf', '--force-rpath', '--set-rpath', '$ORIGIN', dest_path])
 
     return new_soname, dest_path
 
